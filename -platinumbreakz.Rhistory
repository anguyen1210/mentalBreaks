library(blogdown)
new_content(theme = "htr3n/hyde-hyde")
new_content(theme = "/htr3n/hyde-hyde")
new_site(theme = "htr3n/hyde-hyde")
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
library(blogdown)
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
library(blogdown)
serve_site()
library(blogdown)
serve_site()
hugo_version
library(blogdown)
mutate()
install.packages("blogdown")
hugo_verson()
hugo version
library(blogdown)
hugo_version()
?hugo_version
install_hugo
install_hugo()
hugo_version()
serve_site()
serve_site()
getwd()
knitr::opts_chunk$set(collapse = TRUE)
par(mar = c(0, 1, 0, 1))
pie(
c(280, 60, 20),
c('Sky', 'Sunny side of pyramid', 'Shady side of pyramid'),
col = c('#0292D8', '#F7EA39', '#C4B632'),
init.angle = -50, border = NA
)
library(blogdown)
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
new_post(rmd = TRUE)
new_post(rmd = TRUE)
blogdown:::new_post_addin()
serve_site()
serve_site()
library(blogdown)
serve_site()
serve_site()
position <- c("dot", "no_dot", "razorback", "trotter", "snouter", "jowler")
p <- c(.349, .302, .224, .088, .030, .0061)
library(tidyverse)
position <- c("dot", "no_dot", "razorback", "trotter", "snouter", "jowler")
p <- c(.349, .302, .224, .088, .030, .0061)
#create matrix with joint probabilities
P <- p %*% t(p)
#label the rows and columns
rownames(P) <- position
colnames(P) <- position
#print results
P
sum(P)
#points table taken from Wiki entry
PTS <- matrix(c(1,0,5,5,10,15,
0,1,5,5,10,15,
5,5,20,10,15,20,
5,5,10,20,15,20,
10,10,15,15,40,25,
15,15,20,20,25,60
), nrow = 6, ncol = 6)
#add labels
rownames(PTS) <- position
colnames(PTS) <- position
#print results
PTS
#create vector for different point outcomes
z <- c(0, 1, 5, 10, 15, 20, 25, 40, 60)
#create vector for corresponding probabilities
p_Z <- c(
(P[1,2] + P[2,1]),
(P[1,1] + P[2,2]),
(P[1,3] + P[1,4] + P[2,3] + P[2,4] + P[3,1] + P[3,2] + P[4,1] +P[4,2]),
(P[1,5] + P[2,5] + P[3,4] + P[4,3] + P[5,1] +P[5,2]),
(P[1,6] + P[2,6] + P[3,5] + P[4,5] +P[5,3] + P[5,4] + P[6,1] + P[6,2]),
(P[3,3] + P[3,6] + P[4,4] + P[4,6] + P[6,3] + P[6,4]),
(P[5,6] + P[6,5]),
P[5,5],
P[6,5]
)
E_Z <- sum(z*p_Z)
#print result
E_Z
#create vector of the different starting values of t
t_vec <- 0:100
#calculate different expected values for each starting t
t_exp_val <- (p_Z[1]*-t_vec) + sum(z[2:9] * p_Z[2:9])
#bind the two objects together in order to plot
t_sim <- as_tibble(cbind(t_vec, t_exp_val))
#add labels
names(t_sim) <- c("t", "Exp.Value")
#plot expected value~t-value
t_sim %>% ggplot(aes(x = t, y = Exp.Value)) + geom_smooth(color = "deeppink", method = "loess") +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey50" ) +
annotate(geom = "point", x = t, y = 0, color = "deeppink4") +
annotate(geom = "text", x = t, y = 0, label = "t = 22.39", color = "deeppink4", size = 3.5, hjust= -0.1, vjust= -0.2)
annotate(geom = "text", x = t, y = 0, label = "t = 22.39", color = "deeppink4", size = 3.5, hjust= -0.1, vjust= -0.2)
serve_site()
names(t_xim)
names(t_sim)
View(t_sim)
t_sim %>% ggplot(aes(x = t, y = Exp.Value)) + geom_smooth(color = "deeppink", method = "loess") +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey50" ) +
annotate(geom = "point", x = t, y = 0, color = "deeppink4") +
annotate(geom = "text", x = t, y = 0, label = "t = 22.39", color = "deeppink4", size = 3.5, hjust= -0.1, vjust= -0.2)
serve_site()
#create vector of the different starting values of t
t_vec <- 0:100
#calculate different expected values for each starting t
t_exp_val <- (p_Z[1]*-t_vec) + sum(z[2:9] * p_Z[2:9])
#bind the two objects together in order to plot
t_sim <- as_tibble(cbind(t_vec, t_exp_val))
#add labels
names(t_sim) <- c("t", "Exp.Value")
#plot expected value~t-value
t_sim %>% ggplot(aes(x = t, y = Exp.Value)) + geom_smooth(color = "deeppink", method = "loess") +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey50" ) +
annotate(geom = "point", x = t, y = 0, color = "deeppink4") +
annotate(geom = "text", x = t, y = 0, label = "t = 22.39", color = "deeppink4", size = 3.5, hjust= -0.1, vjust= -0.2)
class(t_sim)
str(t_sim)
names(t_sim)
plot(t_sim$Exp.Value, t_sim$t)
#create vector of the different starting values of t
t_vec <- 0:100
#calculate different expected values for each starting t
t_exp_val <- (p_Z[1]*-t_vec) + sum(z[2:9] * p_Z[2:9])
#bind the two objects together in order to plot
t_sim <- as_data_frame(cbind(t_vec, t_exp_val))
#add labels
names(t_sim) <- c("t", "Exp.Value")
#plot expected value~t-value
t_sim %>% ggplot(aes(x = t, y = Exp.Value)) + geom_smooth(color = "deeppink", method = "loess") +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey50" ) +
annotate(geom = "point", x = t, y = 0, color = "deeppink4") +
annotate(geom = "text", x = t, y = 0, label = "t = 22.39", color = "deeppink4", size = 3.5, hjust= -0.1, vjust= -0.2)
as_tibble(t_vec, t_exp_val)
#create vector of the different starting values of t
t_vec <- 0:100
#calculate different expected values for each starting t
t_exp_val <- (p_Z[1]*-t_vec) + sum(z[2:9] * p_Z[2:9])
#bind the two objects together in order to plot
t_sim <- as_tibble(t_vec, t_exp_val)
#add labels
names(t_sim) <- c("t", "Exp.Value")
#create vector of the different starting values of t
t_vec <- 0:100
#calculate different expected values for each starting t
t_exp_val <- (p_Z[1]*-t_vec) + sum(z[2:9] * p_Z[2:9])
#bind the two objects together in order to plot
t_sim <- as_tibble(t_vec, t_exp_val)
#add labels
names(t_sim) <- c("t", "Exp.Value")
#create vector of the different starting values of t
t_vec <- 0:100
#calculate different expected values for each starting t
t_exp_val <- (p_Z[1]*-t_vec) + sum(z[2:9] * p_Z[2:9])
#bind the two objects together in order to plot
t_sim <- as_tibble(cbind(t_vec, t_exp_val))
#add labels
names(t_sim) <- c("t", "Exp.Value")
#plot expected value~t-value
t_sim %>% ggplot(aes(x = t, y = Exp.Value)) + geom_smooth(color = "deeppink", method = "loess") +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey50" ) +
annotate(geom = "point", x = t, y = 0, color = "deeppink4") +
annotate(geom = "text", x = t, y = 0, label = "t = 22.39", color = "deeppink4", size = 3.5, hjust= -0.1, vjust= -0.2)
#create vector of the different starting values of t
t_vec <- 0:100
#calculate different expected values for each starting t
t_exp_val <- (p_Z[1]*-t_vec) + sum(z[2:9] * p_Z[2:9])
#bind the two objects together in order to plot
t_sim <- as_tibble(cbind(t_vec, t_exp_val))
#add labels
names(t_sim) <- c("t", "Exp.Value")
#plot expected value~t-value
t_sim %>% ggplot(aes(x = t, y = Exp.Value)) + geom_smooth(color = "deeppink", method = "loess") +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey50" ) +
#create vector of the different starting values of t
t_vec <- 0:100
#calculate different expected values for each starting t
t_exp_val <- (p_Z[1]*-t_vec) + sum(z[2:9] * p_Z[2:9])
#bind the two objects together in order to plot
t_sim <- as_tibble(cbind(t_vec, t_exp_val))
#add labels
names(t_sim) <- c("t", "Exp.Value")
#plot expected value~t-value
t_sim %>% ggplot(aes(x = t, y = Exp.Value)) + geom_smooth(color = "deeppink", method = "loess") +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey50" )
serve_site()
#create vector of the different starting values of t
t_vec <- 0:100
#calculate different expected values for each starting t
t_exp_val <- (p_Z[1]*-t_vec) + sum(z[2:9] * p_Z[2:9])
#bind the two objects together in order to plot
t_sim <- as_tibble(cbind(t_vec, t_exp_val))
#add labels
names(t_sim) <- c("t", "Exp.Value")
#plot expected value~t-value
t_sim %>% ggplot(aes(x = t, y = Exp.Value)) + geom_smooth(color = "deeppink", method = "loess") +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey50") +
annotate(geom = "point", x = t, y = 0, color = "deeppink4") +
annotate(geom = "text", x = t, y = 0, label = "t = 22.39", color = "deeppink4", size = 3.5, hjust= -0.1, vjust= -0.2)
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
blogdown:::insert_image_addin()
serve_site()
serve_site()
bookdown:::mathquill()
blogdown:::insert_image_addin()
library(blogdown)
blogdown:::insert_image_addin()
bookdown:::mathquill()
bookdown:::mathquill()
bookdown:::mathquill()
library(tidyverse)
position <- c("dot", "no_dot", "razorback", "trotter", "snouter", "jowler")
p <- c(.349, .302, .224, .088, .030, .0061)
#create matrix with joint probabilities
P <- p %*% t(p)
#label the rows and columns
rownames(P) <- position
colnames(P) <- position
#print results
P
sum(P)
#points table taken from Wiki entry
PTS <- matrix(c(1,0,5,5,10,15,
0,1,5,5,10,15,
5,5,20,10,15,20,
5,5,10,20,15,20,
10,10,15,15,40,25,
15,15,20,20,25,60
), nrow = 6, ncol = 6)
#add labels
rownames(PTS) <- position
colnames(PTS) <- position
#print results
PTS
#create vector for different point outcomes
z <- c(0, 1, 5, 10, 15, 20, 25, 40, 60)
#create vector for corresponding probabilities
p_Z <- c(
(P[1,2] + P[2,1]),
(P[1,1] + P[2,2]),
(P[1,3] + P[1,4] + P[2,3] + P[2,4] + P[3,1] + P[3,2] + P[4,1] +P[4,2]),
(P[1,5] + P[2,5] + P[3,4] + P[4,3] + P[5,1] +P[5,2]),
(P[1,6] + P[2,6] + P[3,5] + P[4,5] +P[5,3] + P[5,4] + P[6,1] + P[6,2]),
(P[3,3] + P[3,6] + P[4,4] + P[4,6] + P[6,3] + P[6,4]),
(P[5,6] + P[6,5]),
P[5,5],
P[6,5]
)
E_Z <- sum(z*p_Z)
#print result
E_Z
#create vector of the different starting values of t
t_vec <- 0:100
#calculate different expected values for each starting t
t_exp_val <- (p_Z[1]*-t_vec) + sum(z[2:9] * p_Z[2:9])
#bind the two objects together in order to plot
t_sim <- as_tibble(cbind(t_vec, t_exp_val))
#add labels
names(t_sim) <- c("t", "Exp.Value")
#plot expected value~t-value
t_sim %>% ggplot(aes(x = t, y = Exp.Value)) + geom_smooth(color = "deeppink", method = "loess") +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey50") +
annotate(geom = "point", x = t, y = 0, color = "deeppink4") +
annotate(geom = "text", x = t, y = 0, label = "t = 22.39", color = "deeppink4", size = 3.5, hjust= -0.1, vjust= -0.2)
#create vector of the different starting values of t
t_vec <- 0:100
#calculate different expected values for each starting t
t_exp_val <- (p_Z[1]*-t_vec) + sum(z[2:9] * p_Z[2:9])
#bind the two objects together in order to plot
t_sim <- as_tibble(cbind(t_vec, t_exp_val))
library(tidyverse)
position <- c("dot", "no_dot", "razorback", "trotter", "snouter", "jowler")
p <- c(.349, .302, .224, .088, .030, .0061)
#create matrix with joint probabilities
P <- p %*% t(p)
#label the rows and columns
rownames(P) <- position
colnames(P) <- position
#print results
P
sum(P)
#points table taken from Wiki entry
PTS <- matrix(c(1,0,5,5,10,15,
0,1,5,5,10,15,
5,5,20,10,15,20,
5,5,10,20,15,20,
10,10,15,15,40,25,
15,15,20,20,25,60
), nrow = 6, ncol = 6)
#add labels
rownames(PTS) <- position
colnames(PTS) <- position
#print results
PTS
#create vector for different point outcomes
z <- c(0, 1, 5, 10, 15, 20, 25, 40, 60)
#create vector for corresponding probabilities
p_Z <- c(
(P[1,2] + P[2,1]),
(P[1,1] + P[2,2]),
(P[1,3] + P[1,4] + P[2,3] + P[2,4] + P[3,1] + P[3,2] + P[4,1] +P[4,2]),
(P[1,5] + P[2,5] + P[3,4] + P[4,3] + P[5,1] +P[5,2]),
(P[1,6] + P[2,6] + P[3,5] + P[4,5] +P[5,3] + P[5,4] + P[6,1] + P[6,2]),
(P[3,3] + P[3,6] + P[4,4] + P[4,6] + P[6,3] + P[6,4]),
(P[5,6] + P[6,5]),
P[5,5],
P[6,5]
)
E_Z <- sum(z*p_Z)
#print result
E_Z
#create vector of the different starting values of t
t_vec <- 0:100
#calculate different expected values for each starting t
t_exp_val <- (p_Z[1]*-t_vec) + sum(z[2:9] * p_Z[2:9])
#bind the two objects together in order to plot
t_sim <- as_tibble(cbind(t_vec, t_exp_val))
#add labels
names(t_sim) <- c("t", "Exp.Value")
#plot expected value~t-value
t_sim %>% ggplot(aes(x = t, y = Exp.Value)) + geom_smooth(color = "deeppink", method = "loess") +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey50") +
annotate(geom = "point", x = 22.38921, y = 0, color = "deeppink4") +
annotate(geom = "text", x = 22.38921, y = 0, label = "t = 22.39", color = "deeppink4", size = 3.5, hjust= -0.1, vjust= -0.2)
t <- (sum(z[2:9] *p_Z[2:9]))/p_Z[1]
serve_site
serve_site()
library(blogdown)
serve_site()
serve_site()
serve_site()
getwd()
blogdown:::insert_image_addin()
getwed()
getwd()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
library(blogdown)
serve_site()
serve_site()
library(blogdown)
serve_site()
serve_site()
serve_site()
library(blogdown)
serve_site()
serve_site()
serve_site()
getwd()
ls()
rm(list=ls())
blogdown:::new_post_addin()
blogdown:::new_post_addin()
serve_site()
library(blogdown)
serve_site()
library(blogdown)
serve_site()
library(blogdown)
serve_site()
serve_site()
install.packages("blogdown")
install.packages("rvest")
install.packages("broom")
clear
install.packages(c("directlabels", "RSQLite", "tidytext", "tidyverse", "topicmodels"))
install.packages("tidyverse")
library(tidyverse)
library(RSQLite)
library(knitr)
library(directlabels)
library(tidytext)
library(topicmodels)
install.packages(c("dslabs", "gridExtra", "HistData", "Lahman"))
install.packages("lpSolve")
install.packages("rmarkdown")
install.packages("blogdown")
install.packages(c("directlabels", "RSQLite", "tidytext", "tidyverse", "topicmodels"))
install.packages("tidyverse")
library(blogdown)
serve_site()
blogdown::install_hugo()
serve_site()
library(blogdown)
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
library(haven)
shock_edattain <- read_dta("~/coursework/unine/applied-econometrics/assignments/assignment02_balkan_shock/data/shock_edattain.dta")
View(shock_edattain)
getwd()
saveRDS(shock_edattain, " "C:/Users/anguy/OneDrive/projects/mentalBreaks/content/posts/shock_edattain.rds")
saveRDS(shock_edattain, "C:/Users/anguy/OneDrive/projects/mentalBreaks/content/posts/shock_edattain.rds")
View(shock_edattain)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gridExtra)
shock_canton <- readRDS("shock_canton.rds")
edattain_labels <- c("Primary school completed or less", "Secondary completed", "University completed")
col_labels2 <- c("Level of schooling", "Native workers in 2000 (Total)", "Balkan workers in 2000 (Total)", "Relative refugee supply shock (%)", "Change in unemployment (%)", "Change in employment (%)")
shock_edattain <- cbind(shock_edattain, edattain_labels)
shock_edattain$pct_shock <- round(shock_edattain$pct_shock, 2)
shock_edattain$pct_delta_ue <- round(shock_edattain$pct_delta_ue, 2)
shock_edattain$pct_delta_e <- round(shock_edattain$pct_delta_e, 2)
shock_edattain <- shock_edattain %>% select(edattain_labels, native, balkan, pct_shock, pct_delta_ue, pct_delta_e)
names(shock_edattain) <- col_labels2
knitr::kable(shock_edattain)
edattain_labels <- c("Primary school completed or less", "Secondary completed", "University completed")
col_labels2 <- c("Level of schooling", "Native workers in 2000 (Total)", "Balkan workers in 2000 (Total)", "Relative refugee supply shock (%)", "Change in unemployment (%)", "Change in employment (%)")
shock_edattain <- cbind(shock_edattain, edattain_labels)
shock_edattain$pct_shock <- round(shock_edattain$pct_shock, 2)
edattain_labels <- c("Primary school completed or less", "Secondary completed", "University completed")
col_labels2 <- c("Level of schooling", "Native workers in 2000 (Total)", "Balkan workers in 2000 (Total)", "Relative refugee supply shock (%)", "Change in unemployment (%)", "Change in employment (%)")
shock_edattain <- cbind(shock_edattain, edattain_labels)
shock_edattain$pct_shock <- round(shock_edattain$pct_shock, 2)
edattain_labels <- c("Primary school completed or less", "Secondary completed", "University completed")
col_labels2 <- c("Level of schooling", "Native workers in 2000 (Total)", "Balkan workers in 2000 (Total)", "Relative refugee supply shock (%)", "Change in unemployment (%)", "Change in employment (%)")
shock_edattain <- cbind(shock_edattain, edattain_labels)
shock_edattain$pct_shock <- round(shock_edattain$pct_shock, 2)
edattain_labels <- c("Primary school completed or less", "Secondary completed", "University completed")
col_labels2 <- c("Level of schooling", "Native workers in 2000 (Total)", "Balkan workers in 2000 (Total)", "Relative refugee supply shock (%)", "Change in unemployment (%)", "Change in employment (%)")
shock_edattain <- cbind(shock_edattain, edattain_labels)
shock_edattain$pct_shock <- round(shock_edattain$pct_shock, 2)
View(shock_edattain)
knitr::kable(shock_edattain)
knitr::kable(shock_edattain, caption = "Table C")
knitr::kable(shock_edattain, label = "Table C")
library(blogdown)
serve_site()
serve_site()
library(blogdown)
serve_site()
ls()
rm(edattain_labels, col_labels2)
